// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace FPWebAutomation_MSTests.SpecFlow
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class SecurityJOTTokenExpiryFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SpecFlowFeature1.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Security JOT Token Expiry", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
            PropertiesCollection.htmlReporter = new AventStack.ExtentReports.Reporter.ExtentHtmlReporter(@"C:\FlightPro\Dev\_main\Test Automation\FlightPro\FightPro_WebAutomation\FPWebAutomation\Report\Report.html");
            PropertiesCollection.htmlReporter.LoadConfig(@"C:\extent-configfile\extent-config.xml");
            PropertiesCollection.extent = new AventStack.ExtentReports.ExtentReports();
            PropertiesCollection.extent.AttachReporter(PropertiesCollection.htmlReporter);
            PropertiesCollection.extent.AddSystemInfo("Automation Database", "8.1");
            PropertiesCollection.extent.AddSystemInfo("Browser", "Chrome");
            PropertiesCollection.extent.AddSystemInfo("Application Under Test (AUT)", "FlightProWeb");
            PropertiesCollection.extent.AddSystemInfo("Application URL", "http://oc-svr-at1/Fltpro_Automation_main/");
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Security JOT Token Expiry")))
            {
                FPWebAutomation_MSTests.SpecFlow.SecurityJOTTokenExpiryFeature.FeatureSetup(null);
            }
            PropertiesCollection.driver = new OpenQA.Selenium.Chrome.ChromeDriver(System.Configuration.ConfigurationManager.AppSettings["ChromeDriverPath"]);
            PropertiesCollection.driver.Manage().Window.Maximize();
            PageObjects.FpLoginPage loginPage = new PageObjects.FpLoginPage();
            loginPage.Login();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
            PropertiesCollection.driver.Close();
            PropertiesCollection.driver.Quit();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SecurityJOTToken_01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Security JOT Token Expiry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SecurityJOTokenPositiveScenario")]
        public virtual void SecurityJOTToken_01()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SecurityJOTToken_01", new string[] {
                        "SecurityJOTokenPositiveScenario"});
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given("the user is trying to access data in our system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.And("the JOT token is not expired", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
 testRunner.When("the user is already logged in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
 testRunner.Then("the information is shared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SecurityJOTToken_02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Security JOT Token Expiry")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SecurityJOTTokenPositiveScenario")]
        public virtual void SecurityJOTToken_02()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SecurityJOTToken_02", new string[] {
                        "SecurityJOTTokenPositiveScenario"});
#line 11
 this.ScenarioSetup(scenarioInfo);
#line 12
testRunner.Given("the user is trying to access data in our system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
            var sidebarMenu = new PageObjects.FpSideMenus();
            PageObjects.FpCombinedSchedulePage combinedSchedule = new PageObjects.FpCombinedSchedulePage();
            sidebarMenu.LnkCombinedSchedule.Click();
            OpenQA.Selenium.IWebElement framesource = PropertiesCollection.driver.FindElement(OpenQA.Selenium.By.XPath("//iframe[@class='iframe-placeholder']"));

#line 13
            testRunner.When("the JOT token is already expired", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
           
            var frameSourceValue = framesource.GetAttribute("src");
            PropertiesCollection.driver.Close();
            PropertiesCollection.driver.Quit();
            System.Threading.Thread.Sleep(20000);
            PropertiesCollection.driver = new OpenQA.Selenium.Chrome.ChromeDriver(Configuration.@ConfigurationManager.AppSettings["ChromeDriverPath"]);
            PropertiesCollection.driver.Navigate().GoToUrl(frameSourceValue);
            PropertiesCollection.driver.Manage().Window.Maximize();
         
            testRunner.Then("the system returns an error", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            OpenQA.Selenium.IWebElement errorCode = PropertiesCollection.driver.FindElement(OpenQA.Selenium.By.XPath("//*[@id=\"error-information-popup-content\"]/div[2]"));
            System.Threading.Thread.Sleep(2000);
            Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual("HTTP ERROR 401", errorCode.Text);
#line hidden
            //this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

